@charset "UTF-8";
/*------------------------------------*\
	#DOCUMENTPREVIEW
\*------------------------------------*/
/**
 * CONTENTS
 *
 * SETTINGS
 * Default..............lib default settings.
 * Colors...............Manage our color palette in isolation.
 * Global...............Globally-available variables and settings/config.
 * Responsive...........Set up and name our breakpoints.
 *
 * TOOLS
 * Functions............inuitcss' default functions. ??? Do we need this one???
 * Mixins...............inuitcss' default mixins. ??? Do we need this one???
 * Mixins...............Our mixins.
 * Responsive...........Responsive tooling (requires responsive settings).
 * Aliases..............Aliases onto longer inuitcss variables and mixins.
 *
 * GENERIC
 * Normalize.css........A level playing field.
 * Reset................A pared back reset to remove margins.
 * Box-sizing...........Better default 'box-sizing'.
 * Shared...............Sensibly and tersely share global commonalities.
 *
 * BASE
 * Page.................Our page module.
 * Links................Hyperlink styles.
 * Images...............inuitcss images.
 *
 * OBJECTS
 * Layout...............inuitcss' layout tool.
 *
 * COMPONENTS
 *
 * TRUMPS
 */
/**
 * #SETTINGS
 */
/*------------------------------------*\
	#INUIT-SETTINGS-DEFAULTS
\*------------------------------------*/
/**
 * inuitcss, by @csswizardry | github.com/inuitcss | inuitcss.com
 *
 * These variables are inuitcss' defaults; they should not be modified or
 * adjusted directly; you should predefine the variables in your own project.
 */
/*------------------------------------*\
	#SETTINGS-COLORS
\*------------------------------------*/
/**
 * SpringCM
 *
 * These are SpringCM's global palette colors.
 *
 * Usage Rules
 * 1. All uses of colors in dependant projects should generally pull from this palette.
 * 2. Do not use these colors directly in your css declarations.
 *    a. Instead, create your own color palette which declares semantic $color variables.
 *
 * Syntax Rules
 * 1. Define CSS hexvalue(et al) colors with name $spring-*.
 *    a. Use all 6 characters for hexvalues.
 * 2. When using a color, create a semantically named $color-{describe element}.
 *    a. Do not use $spring colors directly in a CSS declaration.
 * 3. Unless another order is specified, order by ROYGBIV, then dark to light.
 */
/*------------------------------------*\
	#SETTINGS-COLORS
\*------------------------------------*/
/**
 * SpringCM
 *
 * These are SpringCM's global palette colors.
 *
 * Usage Rules
 * 1. All uses of colors in dependant projects should generally pull from this palette.
 * 2. Do not use these colors directly in your css declarations.
 *    a. Instead, create your own color palette which declares semantic $color variables.
 *
 * Syntax Rules
 * 1. Define CSS hexvalue(et al) colors with name $spring-*.
 *    a. Use all 6 characters for hexvalues.
 * 2. When using a color, create a semantically named $color-{describe element}.
 *    a. Do not use $spring colors directly in a CSS declaration.
 * 3. Unless another order is specified, order by ROYGBIV, then dark to light.
 */
/*------------------------------------*\
	#SETTINGS-GLOBAL
\*------------------------------------*/
/**
 * SpringCM
 *
 * SpringCM global variables.
 */
/*------------------------------------*\
	#INUIT-SETTINGS-RESPONSIVE
\*------------------------------------*/
/**
 * inuitcss, by @csswizardry | github.com/inuitcss | inuitcss.com
 *
 * These variables are inuitcss' defaults; they should not be modified or
 * adjusted directly; you should predefine the variables in your own project.
 *
 * Hold our breakpoint aliases and conditions in a list.
 *
 * These can be invoked later on via the 'media-query()' mixin found in '_tools.responsive'.
 */
/**
 * #TOOLS
 */
/*------------------------------------*\
	#INUIT-TOOLS-FUNCTIONS
\*------------------------------------*/
/**
 * inuitcss, by @csswizardry | github.com/inuitcss | inuitcss.com
 *
 * inuitcss makes use of a few functions that are also available for you to use
 * later on in your extension of the framework.
 */
/*------------------------------------*\
	#INUIT-TOOLS-MIXINS
\*------------------------------------*/
/**
 * inuitcss, by @csswizardry | github.com/inuitcss | inuitcss.com
 *
 * inuitcss has a number of default mixins that the framework, and developers
 * working with it, can make use of.
 */
/*------------------------------------*\
	#TOOLS-MIXINS
\*------------------------------------*/
/**
 * SpringCM
 *
 * SpringCM global mixins.
 */
/*------------------------------------*\
	#INUIT-TOOLS-RESPONSIVE
\*------------------------------------*/
/**
 * inuitcss, by @csswizardry | github.com/inuitcss | inuitcss.com
 */
/*------------------------------------*\
	#INUIT-SETTINGS-DEFAULTS
\*------------------------------------*/
/**
 * inuitcss, by @csswizardry | github.com/inuitcss | inuitcss.com
 *
 * These variables are inuitcss' defaults; they should not be modified or
 * adjusted directly; you should predefine the variables in your own project.
 */
/*------------------------------------*\
	#INUIT-TOOLS-MIXINS
\*------------------------------------*/
/**
 * inuitcss, by @csswizardry | github.com/inuitcss | inuitcss.com
 *
 * inuitcss has a number of default mixins that the framework, and developers
 * working with it, can make use of.
 */
/*------------------------------------*\
	#TOOLS-ALIASES
\*------------------------------------*/
/**
 * SpringCM
 *
 * Alias $inuit variables with our own variables that don't reference inuit.
 */
/**
 * #GENERIC
 */
/*------------------------------------*\
	#INUIT-GENERIC-NORMALIZE
\*------------------------------------*/
/**
 * normalize.css v3.0.2 | MIT License | git.io/normalize 
 * normalize.css makes browsers render all elements more consistently and
 * in line with modern standards.
 *
 * File not modified, directly from github.com/necolas/normalize.css
*/
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct 'block' display not defined for any HTML5 element in IE 8/9.
 * Correct 'block' display not defined for 'details' or 'summary' in IE 10/11
 * and Firefox.
 * Correct 'block' display not defined for 'main' in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct 'inline-block' display not defined in IE 8/9.
 * 2. Normalize vertical alignment of 'progress' in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying 'audio' without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address '[hidden]' styling not present in IE 8/9/10.
 * Hide the 'template' element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to 'bolder' in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address variable 'h1' font-size and margin within 'section' and 'article'
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent 'sub' and 'sup' affecting 'line-height' in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside 'a' element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto;
}

/**
 * Address odd 'em'-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of 'select', unless a 'border' property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address 'overflow' set to 'hidden' in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent 'text-transform' inheritance for 'button' and 'select'.
 * All other form control elements do not inherit 'text-transform' values.
 * Correct 'button' style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct 'select' style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native 'audio'
 *    and 'video' controls.
 * 2. Correct inability to style clickable 'input' types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    'input' and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting 'line-height' on 'input' using '!important' in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to 'content-box' in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * 'font-size' values of the 'input', it causes the cursor style of the
 * decrement button to change from 'default' to 'text'.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address 'appearance' set to 'searchfield' in Safari and Chrome.
 * 2. Address 'box-sizing' set to 'border-box' in Safari and Chrome
 *    (include '-moz' to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and 'textfield' appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/**
 * 1. Correct 'color' not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/**
 * Don't inherit the 'font-weight' (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold;
}

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

td,
th {
  padding: 0;
}

/*------------------------------------*\
	#INUIT-GENERIC-RESET
\*------------------------------------*/
/**
 * inuitcss, by @csswizardry | github.com/inuitcss | inuitcss.com
 */
/**
 * As well as using normalize.css, it is often advantageous to remove all
 * margins from certain elements.
 */
body,
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
figure,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0;
}

/**
 * Give a help cursor to elements that give extra info on ':hover'.
 */
abbr[title],
dfn[title] {
  cursor: help;
}

/**
 * Remove underlines from potentially troublesome elements.
 */
u,
ins {
  text-decoration: none;
}

/**
 * Apply faux underlines to inserted text via 'border-bottom'.
 */
ins {
  border-bottom: 1px solid;
}

/*------------------------------------*\
	#TOOLS-MIXINS
\*------------------------------------*/
/**
 * SpringCM
 *
 * SpringCM global mixins.
 */
/*------------------------------------*\
	#INUIT-GENERIC-BOX-SIZING
\*------------------------------------*/
/**
 * Set the global 'box-sizing' state to 'border-box'.
 *
 * css-tricks.com/inheriting-box-sizing-probably-slightly-better-best-practice
 * paulirish.com/2012/box-sizing-border-box-ftw
 */
html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}

/*------------------------------------*\
	#INUIT-SETTINGS-DEFAULTS
\*------------------------------------*/
/**
 * inuitcss, by @csswizardry | github.com/inuitcss | inuitcss.com
 *
 * These variables are inuitcss' defaults; they should not be modified or
 * adjusted directly; you should predefine the variables in your own project.
 */
/*------------------------------------*\
	#INUIT-GENERIC-SHARED
\*------------------------------------*/
/**
 * inuitcss, by @csswizardry | github.com/inuitcss | inuitcss.com
 */
/**
 * Where 'margin-bottom' is concerned,this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
h1, h2, h3, h4, h5, h6,
ul, ol, dl,
blockquote, p, address,
table,
fieldset, figure,
pre {
  margin-bottom: 24px;
  margin-bottom: 1.5rem;
}

/**
 * Where 'margin-left' is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once,here.
 */
ul, ol, dd {
  margin-left: 48px;
  margin-left: 3rem;
}

/**
 * #BASE
 */
/*------------------------------------*\
	#SETTINGS-COLORS
\*------------------------------------*/
/**
 * SpringCM
 *
 * These are SpringCM's global palette colors.
 *
 * Usage Rules
 * 1. All uses of colors in dependant projects should generally pull from this palette.
 * 2. Do not use these colors directly in your css declarations.
 *    a. Instead, create your own color palette which declares semantic $color variables.
 *
 * Syntax Rules
 * 1. Define CSS hexvalue(et al) colors with name $spring-*.
 *    a. Use all 6 characters for hexvalues.
 * 2. When using a color, create a semantically named $color-{describe element}.
 *    a. Do not use $spring colors directly in a CSS declaration.
 * 3. Unless another order is specified, order by ROYGBIV, then dark to light.
 */
/*------------------------------------*\
	#SETTINGS-GLOBAL
\*------------------------------------*/
/**
 * SpringCM
 *
 * SpringCM global variables.
 */
/*------------------------------------*\
	#INUIT-SETTINGS-DEFAULTS
\*------------------------------------*/
/**
 * inuitcss, by @csswizardry | github.com/inuitcss | inuitcss.com
 *
 * These variables are inuitcss' defaults; they should not be modified or
 * adjusted directly; you should predefine the variables in your own project.
 */
/*------------------------------------*\
	#INUIT-TOOLS-MIXINS
\*------------------------------------*/
/**
 * inuitcss, by @csswizardry | github.com/inuitcss | inuitcss.com
 *
 * inuitcss has a number of default mixins that the framework, and developers
 * working with it, can make use of.
 */
/*------------------------------------*\
	#TOOLS-ALIASES
\*------------------------------------*/
/**
 * SpringCM
 *
 * Alias $inuit variables with our own variables that don't reference inuit.
 */
/*------------------------------------*\
	#TOOLS-MIXINS
\*------------------------------------*/
/**
 * SpringCM
 *
 * SpringCM global mixins.
 */
/*------------------------------------*\
	#BASE-PAGE
\*------------------------------------*/
/**
 * SpringCM
 *
 * SpringCM global base.
 */
/**
 * High-, page-level styling.
 *
 * 1. Set the default 'font', 'font-size' and 'line-height' for the entire project,
 *    sourced from our default variables. The 'font-size' is calculated to exist
 *    in ems, the 'line-height' is calculated to exist unitlessly.
 * 2. Ensure the page always fills at least the entire height of the viewport.
 * 3. Fonts on OSX will look more consistent with other systems that do not
 *    render text using sub-pixel anti-aliasing.
 */
html {
  font-family: Arial, sans-serif;
  font-size: 1em;
  /* [1] */
  line-height: 1.5;
  /* [1] */
  background-color: #ffffff;
  color: #212121;
  min-height: 100%;
  /* [2] */
  -moz-osx-font-smoothing: grayscale;
  /* [3] */
  -webkit-font-smoothing: antialiased;
  /* [3] */
}

/*------------------------------------*\
	#SETTINGS-COLORS
\*------------------------------------*/
/**
 * SpringCM
 *
 * These are SpringCM's global palette colors.
 *
 * Usage Rules
 * 1. All uses of colors in dependant projects should generally pull from this palette.
 * 2. Do not use these colors directly in your css declarations.
 *    a. Instead, create your own color palette which declares semantic $color variables.
 *
 * Syntax Rules
 * 1. Define CSS hexvalue(et al) colors with name $spring-*.
 *    a. Use all 6 characters for hexvalues.
 * 2. When using a color, create a semantically named $color-{describe element}.
 *    a. Do not use $spring colors directly in a CSS declaration.
 * 3. Unless another order is specified, order by ROYGBIV, then dark to light.
 */
/*------------------------------------*\
	#SETTINGS-GLOBAL
\*------------------------------------*/
/**
 * SpringCM
 *
 * SpringCM global variables.
 */
/*------------------------------------*\
	#TOOLS-MIXINS
\*------------------------------------*/
/**
 * SpringCM
 *
 * SpringCM global mixins.
 */
/*------------------------------------*\
	#BASE-LINKS
\*------------------------------------*/
/**
 * SpringCM
 *
 * SpringCM global link styles.
 */
a {
  text-decoration: none;
  color: #29bdbe;
}
a:hover, a:active, a:focus {
  text-decoration: underline;
}

/*------------------------------------*\
	#TOOLS-MIXINS
\*------------------------------------*/
/**
 * SpringCM
 *
 * SpringCM global mixins.
 */
/*------------------------------------*\
	#INUIT-BASE-IMAGES
\*------------------------------------*/
/**
 * inuitcss, by @csswizardry | github.com/inuitcss | inuitcss.com
 */
/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 * 3. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 */
img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */
  vertical-align: middle;
  /* [3] */
}

/**
 * 1. Google Maps breaks if `max-width: 100%` acts upon it; use their selector
 *    to remove the effects.
 * 2. If a `width` and/or `height` attribute have been explicitly defined, letΓÇÖs
 *    not make the image fluid.
 */
.gm-style img,
img[width],
img[height] {
  /* [2] */
  max-width: none;
}

/**
 * #OBJECTS
 */
/*------------------------------------*\
	#INUIT-SETTINGS-DEFAULTS
\*------------------------------------*/
/**
 * inuitcss, by @csswizardry | github.com/inuitcss | inuitcss.com
 *
 * These variables are inuitcss' defaults; they should not be modified or
 * adjusted directly; you should predefine the variables in your own project.
 */
/*------------------------------------*\
	#INUIT-OBJECTS-LAYOUT
\*------------------------------------*/
/**
 * inuitcss, by @csswizardry | github.com/inuitcss | inuitcss.com
 *
 * The inuitcss layout system uses 'box-sizing: border-box;' and
 * 'display: inline-block;' to create an extremely powerful, flexible
 * alternative to the traditional grid system. Combine the layout items with
 * the widths found in 'trumps.widths'.
 */
/**
 * Begin a layout group.
 */
.layout {
  list-style: none;
  margin: 0;
  padding: 0;
  margin-left: -24px;
}

/**
 * 1. Cause columns to stack side-by-side.
 * 2. Space columns apart.
 * 3. Align columns to the tops of each other.
 * 4. Full-width unless told to behave otherwise.
 * 5. Required to combine fluid widths and fixed gutters.
 */
.layout__item {
  display: inline-block;
  /* [1] */
  padding-left: 24px;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */
}

/*# sourceMappingURL=setup.page.css.map */
